웹팩 : 리액트 코드를 브라우저가 이해할 수 있는 코드로 변경해주는 역할을 한다. 
웹팩을 이용해서 최근 자바 스크립트를 브라우저가 이해할 수 있게 변경해줘야한다. 
ex. 이미지 파일을 웹팩을 통해 png로 변경 가능
바꾸는 것과 동시에 자동으로 파일 압축도 할 수 있다
내가 파일을 바꿀 때 브라우저를 새로고침 한다거나, 자동으로 테스트를 해본다거나 등등 
create react app : 손쉽게 리액트 앱을 만들어주는 툴
create react app 문구안에 웹팩 파일이 숨어있는 셈

자바스크립트 안에 html 을 jsx 라고 부름
리액트 컴포넌트를 만들때 사용하는 언어로 규칙은 굉장히 심플하다 
class는 className으로
이미지 소스는 logo로

앱 컴포넌트는 각기 다른 functions과 methods를 갖고 있다. 모든 컴포넌트는 render function을 갖고 있다. render 기능은 뭔가를 보여주는, 출력하는 기능이다. 
이 컴포넌트가 나에게 보여주는 것이 무언인가, 이게 render 기능이다. 

우리는 index.js 를 결국 만드는 것이고 이는 react,reactDOM,css,컴포넌트'app'을 불러온다. 

리액트와 리액트 돔의 차이
리액트는 ui라이브러리, 유저 인터페이스
리액트돔은 리액트를 웹 사이트에 출력(render)하는 걸 도와주는 모델 (dom=document object model)
그래서 리액트를 사용해서 웹사이트에 올려놓고 싶을 때는 reactDOM을 쓰면 된다. 
리액트를 모바일 앱에 올려놓고 싶을때는 reactNative를 쓰는 것
리액트는 라이브러리, 리액트돔은 라이브러리를 웹사이트에 출력해준다. 
리액트돔은 1개의 컴포넌트를 출력하고 그 다큐먼트안에 엘리먼트가 있는데 엘리먼트 id가 root이며 이건 인덱스 html파일에 숨어있다. 

컴포넌트 생성-> 렌더-> 리턴-> html 내용(jsx)
import react->class->render(필수기능)

큰 컴포넌트 안에 작은 컴포넌트를 집어넣는 방식
app 컴포넌트가 대빵 보스 컴포넌트이고 movie 라는 이름의 작은 컴포넌트들이 있는 셈

리액트에는 2개의 주요 컨셉이 있다.
하나는 state, 하나는 props
부모 컴포넌트는 children컴포넌트에게 각각 정보를 준다. props를 통해서
자식 컴포넌트가 부모 컴포넌트로부터 정보를 받으려면 props를 사용해 받아올수있다.
jsx의 경우 명령을 실행시키려면 괄호를 꼭 쳐야한다.
즉, 메인 컴포넌트가 정보를 다 가지고 있고 그 부모 컴포넌트가 자식 컴포넌트에게 정보를 주는 것. 자식 컴포넌트가 부모 컴포넌트에게 정보를 받으려면 props를 사용해야한다.
각기 자식 컴포넌트에게 정보를 전달하고 이를 이용해 강력한 ui 구축 가능. 한개의 데이터 소스를 가지고 각 컴포넌트별로 출력만 하면 됨